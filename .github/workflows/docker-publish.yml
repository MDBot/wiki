name: Docker

on:
  push:
    branches:
      - master
    tags:
      - v*
env:
  IMAGE_NAME: mdbot/wiki
  IMAGE_MIRROR: repo.treescale.com/greboid/wiki

jobs:
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
      
      - name: Log into registry
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USER }}" --password-stdin
      
      - name: Build image
        run: docker build . --tag $IMAGE_NAME

      - name: Push image
        run: |     
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          docker tag $IMAGE_NAME $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME:$VERSION
          
      - name: Log into registry (mirror)
        run: echo "${{ secrets.REG_HUB_TOKEN }}" | docker login repo.treescale.com -u "${{ secrets.REG_HUB_USER }}" --password-stdin

      - name: Push image (mirror)
        run: |     
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          docker tag $IMAGE_NAME IMAGE_MIRROR:$VERSION
          docker push IMAGE_MIRROR:$VERSION
